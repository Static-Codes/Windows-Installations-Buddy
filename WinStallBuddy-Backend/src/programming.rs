use crate::links;
#[allow(dead_code)]
#[derive(Debug)]
pub enum FilezillaType {
    Client,
    Server,
}
#[allow(dead_code)]
#[derive(Debug)]
pub enum Programming {
    AndroidStudio,
    AzureDataStudio,
    BurpSuite,
    DockerDesktop,
    FileZilla(FilezillaType),
    GithubDesktop,
    EclipseIDE,
    FiddlerClassic,
    FiddlerEverywhere,
    Kubernetes,
    MongoDB,
    MySQLWorkbench,
    Nmap,
    NodeJS,
    NotepadPlusPlus,
    Npcap,
    Ollama,
    OracleVirtualBox,
    OracleVirtualBoxExtPack,
    OWASPZAP,
    PostgreSQL,
    Postman,
    Python2_7_18,
    Python3_8_10,
    Python3_9_10,
    Python3_10_10,
    Python3_11_10,
    Python3_12_9,
    Python3_13_2,
    PuTTY,
    SublimeText,
    UTM,
    VisualStudio,
    VisualStudioCode,
    VSCodium,
    WebStorm,
    WinGet,
    WireShark,
    XAMPP,
}

impl Programming {
    pub fn get_link(&self) -> Option<String> {
        match self {
            Programming::AndroidStudio => Some(links::get_android_studio_link()),
            Programming::AzureDataStudio => Some(links::get_azure_link()),
            Programming::BurpSuite => Some(links::get_burp_suite_link()),
            Programming::DockerDesktop => Some(links::get_docker_desktop_link()),
            Programming::FileZilla(filezilla_type) => match filezilla_type {
                FilezillaType::Client => Some(links::get_filezilla_link(FilezillaType::Client)),
                FilezillaType::Server => Some(links::get_filezilla_link(FilezillaType::Server)),
            },
            Programming::GithubDesktop => Some(links::get_github_desktop_link()),
            Programming::EclipseIDE => Some(links::get_eclipse_ide_link()),
            Programming::FiddlerClassic => Some(links::get_fiddler_classic_link()),
            Programming::FiddlerEverywhere => Some(links::get_fiddler_everywhere_link()),
            Programming::Kubernetes => Some(links::get_kubernetes_link()),
            Programming::MongoDB => Some(links::get_mongodb_link()),
            Programming::MySQLWorkbench => Some(links::get_mysql_workbench_link()),
            Programming::Npcap => Some(links::get_npcap_link()),
            Programming::Nmap => Some(links::get_nmap_link()),
            Programming::NodeJS => Some(links::get_nodejs_link()),
            Programming::NotepadPlusPlus => Some(links::get_notepadplusplus_link()),
            Programming::Ollama => Some(links::get_ollama_link()),
            Programming::OracleVirtualBox => Some(links::get_oracle_virtualbox_link()),
            Programming::OracleVirtualBoxExtPack => Some(links::get_oracle_vbox_ext_pack_link()),
            Programming::OWASPZAP => Some(links::get_owasp_zap_link()),
            Programming::PostgreSQL => Some(links::get_postgresql_link()),
            Programming::Postman => Some(links::get_postman_link()),
            Programming::Python2_7_18 => Some(links::get_python2_7_18_link()),
            Programming::Python3_8_10 => Some(links::get_python3_8_10_link()),
            Programming::Python3_9_10 => Some(links::get_python3_9_10_link()),
            Programming::Python3_10_10 => Some(links::get_python3_10_10_link()),
            Programming::Python3_11_10 => Some(links::get_python3_11_10_link()),
            Programming::Python3_12_9 => Some(links::get_python3_12_9_link()),
            Programming::Python3_13_2 => Some(links::get_python3_13_2_link()),
            Programming::PuTTY => Some(links::get_putty_link()),
            Programming::SublimeText => Some(links::get_sublime_text_link()),
            Programming::UTM => Some(links::get_utm_link()),
            Programming::VisualStudio => Some(links::get_visual_studio_link()),
            Programming::VisualStudioCode => Some(links::get_vscode_link()),
            Programming::VSCodium => Some(links::get_vscodium_link()),
            Programming::WebStorm => Some(links::get_webstorm_link()),
            Programming::WinGet => Some(links::get_winget_link()),
            Programming::WireShark => Some(links::get_wireshark_link()),
            Programming::XAMPP => Some(links::get_xampp_link()),
        }
    }
}
